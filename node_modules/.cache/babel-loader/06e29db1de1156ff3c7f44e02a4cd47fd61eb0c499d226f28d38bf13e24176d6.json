{"ast":null,"code":"var _jsxFileName = \"/Users/sandeep/Desktop/my-crm/hr-crm/juspay/src/components/StatsCards.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Grid } from '@mui/material';\nimport { TrendingUp, TrendingDown } from '@mui/icons-material';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectionsChart = () => {\n  const data = [20, 25, 22, 28, 18, 25];\n  const xLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: 250,\n      backgroundColor: '#f8fafc'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        p: 2.5,\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 3,\n          fontWeight: 600,\n          fontSize: '1rem',\n          color: '#374151'\n        },\n        children: \"Projections vs Actuals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 100,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          series: [{\n            data,\n            color: '#a7c7e7'\n          }],\n          xAxis: [{\n            data: xLabels,\n            scaleType: 'band',\n            tickLabelStyle: {\n              fontSize: 12,\n              fill: '#9ca3af'\n            },\n            axisLine: false,\n            tickLine: false\n          }],\n          yAxis: [{\n            tickLabelStyle: {\n              fontSize: 12,\n              fill: '#9ca3af'\n            },\n            axisLine: false,\n            tickLine: false,\n            tickFormatter: value => `${value}M`\n          }],\n          height: 1800,\n          margin: {\n            left: 40,\n            right: 20,\n            top: 20,\n            bottom: 40\n          },\n          grid: {\n            horizontal: true,\n            vertical: false\n          },\n          slotProps: {\n            bar: {\n              rx: 0\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectionsChart;\nconst statsData = [{\n  title: 'Customers',\n  value: '3,781',\n  change: '+11.01%',\n  trend: 'up',\n  bgColor: '#E3F5FF'\n}, {\n  title: 'Orders',\n  value: '1,219',\n  change: '-0.03%',\n  trend: 'down',\n  bgColor: '#F7F9FB'\n}, {\n  title: 'Revenue',\n  value: '$695',\n  change: '+15.03%',\n  trend: 'up',\n  bgColor: '#F7F9FB'\n}, {\n  title: 'Growth',\n  value: '30.1%',\n  change: '+6.08%',\n  trend: 'up',\n  bgColor: '#E5ECF6'\n}];\nconst StatsCards = () => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: statsData.map((stat, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              backgroundColor: stat.bgColor,\n              border: 'none',\n              height: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                p: 2.5,\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 1,\n                  fontWeight: 500\n                },\n                children: stat.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  sx: {\n                    fontWeight: 700,\n                    color: 'text.primary',\n                    fontSize: '1.5rem'\n                  },\n                  children: stat.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5,\n                    color: stat.trend === 'up' ? 'success.main' : 'error.main'\n                  },\n                  children: [stat.trend === 'up' ? /*#__PURE__*/_jsxDEV(TrendingUp, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(TrendingDown, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: 500,\n                    children: stat.change\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(ProjectionsChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatsCards;\nexport default StatsCards;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectionsChart\");\n$RefreshReg$(_c2, \"StatsCards\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Grid","TrendingUp","TrendingDown","BarChart","jsxDEV","_jsxDEV","ProjectionsChart","data","xLabels","sx","height","backgroundColor","children","p","variant","mb","fontWeight","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","width","series","xAxis","scaleType","tickLabelStyle","fill","axisLine","tickLine","yAxis","tickFormatter","value","margin","left","right","top","bottom","grid","horizontal","vertical","slotProps","bar","rx","_c","statsData","title","change","trend","bgColor","StatsCards","container","spacing","item","xs","md","map","stat","index","border","display","flexDirection","justifyContent","alignItems","mt","gap","_c2","$RefreshReg$"],"sources":["/Users/sandeep/Desktop/my-crm/hr-crm/juspay/src/components/StatsCards.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Grid } from '@mui/material';\nimport { TrendingUp, TrendingDown } from '@mui/icons-material';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\nconst ProjectionsChart = () => {\n  const data = [20, 25, 22, 28, 18, 25];\n  const xLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n\n  return (\n    <Card sx={{ height: 250, backgroundColor: '#f8fafc' }}>\n      <CardContent sx={{ p: 2.5, height: '100%' }}>\n        <Typography variant=\"body1\" sx={{ mb: 3, fontWeight: 600, fontSize: '1rem', color: '#374151' }}>\n          Projections vs Actuals\n        </Typography>\n        <Box sx={{ height: 100, width: '100%' }}>\n          <BarChart\n            series={[{ data, color: '#a7c7e7' }]}\n            xAxis={[{ \n              data: xLabels, \n              scaleType: 'band', \n              tickLabelStyle: { fontSize: 12, fill: '#9ca3af' },\n              axisLine: false,\n              tickLine: false\n            }]}\n            yAxis={[{\n              tickLabelStyle: { fontSize: 12, fill: '#9ca3af' },\n              axisLine: false,\n              tickLine: false,\n              tickFormatter: (value) => `${value}M`\n            }]}\n            height={1800}\n            margin={{ left: 40, right: 20, top: 20, bottom: 40 }}\n            grid={{ horizontal: true, vertical: false }}\n            slotProps={{\n              bar: {\n                rx: 0,\n              },\n            }}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst statsData = [\n  {\n    title: 'Customers',\n    value: '3,781',\n    change: '+11.01%',\n    trend: 'up',\n    bgColor: '#E3F5FF',\n  },\n  {\n    title: 'Orders',\n    value: '1,219',\n    change: '-0.03%',\n    trend: 'down',\n    bgColor: '#F7F9FB',\n  },\n  {\n    title: 'Revenue',\n    value: '$695',\n    change: '+15.03%',\n    trend: 'up',\n    bgColor: '#F7F9FB',\n  },\n  {\n    title: 'Growth',\n    value: '30.1%',\n    change: '+6.08%',\n    trend: 'up',\n    bgColor: '#E5ECF6',\n  },\n];\n\nconst StatsCards = () => {\n  return (\n    <Grid container spacing={2} sx={{ mb: 3 }}>\n      <Grid item xs={12} md={6}>\n        <Grid container spacing={2}>\n          {statsData.map((stat, index) => (\n            <Grid item xs={6} key={index}>\n          <Card\n            sx={{\n              backgroundColor: stat.bgColor,\n              border: 'none',\n              height: 120,\n            }}\n          >\n            <CardContent sx={{ p: 2.5, height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                sx={{ mb: 1, fontWeight: 500 }}\n              >\n                {stat.title}\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: 1 }}>\n                <Typography variant=\"h5\" sx={{ fontWeight: 700, color: 'text.primary', fontSize: '1.5rem' }}>\n                  {stat.value}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5,\n                    color: stat.trend === 'up' ? 'success.main' : 'error.main',\n                  }}\n                >\n                  {stat.trend === 'up' ? (\n                    <TrendingUp fontSize=\"small\" />\n                  ) : (\n                    <TrendingDown fontSize=\"small\" />\n                  )}\n                  <Typography variant=\"body2\" fontWeight={500}>\n                    {stat.change}\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <ProjectionsChart />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default StatsCards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAQ,eAAe;AACxE,SAASC,UAAU,EAAEC,YAAY,QAAQ,qBAAqB;AAC9D,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrC,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAE1D,oBACEH,OAAA,CAACT,IAAI;IAACa,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,eACpDP,OAAA,CAACR,WAAW;MAACY,EAAE,EAAE;QAAEI,CAAC,EAAE,GAAG;QAAEH,MAAM,EAAE;MAAO,CAAE;MAAAE,QAAA,gBAC1CP,OAAA,CAACP,UAAU;QAACgB,OAAO,EAAC,OAAO;QAACL,EAAE,EAAE;UAAEM,EAAE,EAAE,CAAC;UAAEC,UAAU,EAAE,GAAG;UAAEC,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAN,QAAA,EAAC;MAEhG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbjB,OAAA,CAACN,GAAG;QAACU,EAAE,EAAE;UAAEC,MAAM,EAAE,GAAG;UAAEa,KAAK,EAAE;QAAO,CAAE;QAAAX,QAAA,eACtCP,OAAA,CAACF,QAAQ;UACPqB,MAAM,EAAE,CAAC;YAAEjB,IAAI;YAAEW,KAAK,EAAE;UAAU,CAAC,CAAE;UACrCO,KAAK,EAAE,CAAC;YACNlB,IAAI,EAAEC,OAAO;YACbkB,SAAS,EAAE,MAAM;YACjBC,cAAc,EAAE;cAAEV,QAAQ,EAAE,EAAE;cAAEW,IAAI,EAAE;YAAU,CAAC;YACjDC,QAAQ,EAAE,KAAK;YACfC,QAAQ,EAAE;UACZ,CAAC,CAAE;UACHC,KAAK,EAAE,CAAC;YACNJ,cAAc,EAAE;cAAEV,QAAQ,EAAE,EAAE;cAAEW,IAAI,EAAE;YAAU,CAAC;YACjDC,QAAQ,EAAE,KAAK;YACfC,QAAQ,EAAE,KAAK;YACfE,aAAa,EAAGC,KAAK,IAAK,GAAGA,KAAK;UACpC,CAAC,CAAE;UACHvB,MAAM,EAAE,IAAK;UACbwB,MAAM,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG,CAAE;UACrDC,IAAI,EAAE;YAAEC,UAAU,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAE;UAC5CC,SAAS,EAAE;YACTC,GAAG,EAAE;cACHC,EAAE,EAAE;YACN;UACF;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACuB,EAAA,GAvCIvC,gBAAgB;AAyCtB,MAAMwC,SAAS,GAAG,CAChB;EACEC,KAAK,EAAE,WAAW;EAClBd,KAAK,EAAE,OAAO;EACde,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,KAAK,EAAE,QAAQ;EACfd,KAAK,EAAE,OAAO;EACde,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,KAAK,EAAE,SAAS;EAChBd,KAAK,EAAE,MAAM;EACbe,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,KAAK,EAAE,QAAQ;EACfd,KAAK,EAAE,OAAO;EACde,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACE9C,OAAA,CAACL,IAAI;IAACoD,SAAS;IAACC,OAAO,EAAE,CAAE;IAAC5C,EAAE,EAAE;MAAEM,EAAE,EAAE;IAAE,CAAE;IAAAH,QAAA,gBACxCP,OAAA,CAACL,IAAI;MAACsD,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAAA5C,QAAA,eACvBP,OAAA,CAACL,IAAI;QAACoD,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAzC,QAAA,EACxBkC,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBtD,OAAA,CAACL,IAAI;UAACsD,IAAI;UAACC,EAAE,EAAE,CAAE;UAAA3C,QAAA,eACnBP,OAAA,CAACT,IAAI;YACHa,EAAE,EAAE;cACFE,eAAe,EAAE+C,IAAI,CAACR,OAAO;cAC7BU,MAAM,EAAE,MAAM;cACdlD,MAAM,EAAE;YACV,CAAE;YAAAE,QAAA,eAEFP,OAAA,CAACR,WAAW;cAACY,EAAE,EAAE;gBAAEI,CAAC,EAAE,GAAG;gBAAEH,MAAM,EAAE,MAAM;gBAAEmD,OAAO,EAAE,MAAM;gBAAEC,aAAa,EAAE,QAAQ;gBAAEC,cAAc,EAAE;cAAgB,CAAE;cAAAnD,QAAA,gBACrHP,OAAA,CAACP,UAAU;gBACTgB,OAAO,EAAC,OAAO;gBACfI,KAAK,EAAC,gBAAgB;gBACtBT,EAAE,EAAE;kBAAEM,EAAE,EAAE,CAAC;kBAAEC,UAAU,EAAE;gBAAI,CAAE;gBAAAJ,QAAA,EAE9B8C,IAAI,CAACX;cAAK;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACbjB,OAAA,CAACN,GAAG;gBAACU,EAAE,EAAE;kBAAEoD,OAAO,EAAE,MAAM;kBAAEG,UAAU,EAAE,QAAQ;kBAAED,cAAc,EAAE,eAAe;kBAAEE,EAAE,EAAE;gBAAE,CAAE;gBAAArD,QAAA,gBACzFP,OAAA,CAACP,UAAU;kBAACgB,OAAO,EAAC,IAAI;kBAACL,EAAE,EAAE;oBAAEO,UAAU,EAAE,GAAG;oBAAEE,KAAK,EAAE,cAAc;oBAAED,QAAQ,EAAE;kBAAS,CAAE;kBAAAL,QAAA,EACzF8C,IAAI,CAACzB;gBAAK;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACbjB,OAAA,CAACN,GAAG;kBACFU,EAAE,EAAE;oBACFoD,OAAO,EAAE,MAAM;oBACfG,UAAU,EAAE,QAAQ;oBACpBE,GAAG,EAAE,GAAG;oBACRhD,KAAK,EAAEwC,IAAI,CAACT,KAAK,KAAK,IAAI,GAAG,cAAc,GAAG;kBAChD,CAAE;kBAAArC,QAAA,GAED8C,IAAI,CAACT,KAAK,KAAK,IAAI,gBAClB5C,OAAA,CAACJ,UAAU;oBAACgB,QAAQ,EAAC;kBAAO;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBAE/BjB,OAAA,CAACH,YAAY;oBAACe,QAAQ,EAAC;kBAAO;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CACjC,eACDjB,OAAA,CAACP,UAAU;oBAACgB,OAAO,EAAC,OAAO;oBAACE,UAAU,EAAE,GAAI;oBAAAJ,QAAA,EACzC8C,IAAI,CAACV;kBAAM;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAvCkBqC,KAAK;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwCtB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACPjB,OAAA,CAACL,IAAI;MAACsD,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAAA5C,QAAA,eACvBP,OAAA,CAACC,gBAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAC6C,GAAA,GAvDIhB,UAAU;AAyDhB,eAAeA,UAAU;AAAC,IAAAN,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}